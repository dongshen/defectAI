There are 8 clusters!
cluster 1 : 
----------------------
1, 1=import,logging
2, 2=import,sys
3, 3=import,types
18, 18=http.fix_location_header,,
19, 19=http.conditional_content_removal,,
20, 20=]
28, 28="""
36, 32=self._exception_middleware,=,[,]
39, 35=mw_class,=,import_string,(,middleware_path,)
42, 38=except,MiddlewareNotUsed,as,exc,:
44, 40=if,six.text_type,(,exc,),:
59, 55=self._request_middleware,=,request_middleware
62, 58=for,db,in,connections.all,(,),:
64, 60=and,db.alias,not,in,non_atomic_requests,),:
67, 63=def,get_exception_response,(,self,,,request,,,resolver,,,status_code,),:
70, 66=response,=,callback,(,request,,,**,param_dict,)
72, 68=signals.got_request_exception.send,(,sender,=,self.__class__,,,request,=,request,)
76, 72="Returns an HttpResponse object for the given HttpRequest"
80, 76=try,:
81, 77=response,=,None
92, 88=callback,,,callback_args,,,callback_kwargs,=,resolver_match
93, 89=request.resolver_match,=,resolver_match
96, 92=if,response,:
101, 97=response,=,wrapped_callback,(,request,,,*,callback_args,,,**,callback_kwargs,)
102, 98=except,Exception,as,e,:
104, 100=response,=,middleware_method,(,request,,,e,)
108, 104=raise
110, 106=if,isinstance,(,callback,,,types.FunctionType,),:
116, 112=if,hasattr,(,response,,,'render',),and,callable,(,response.render,),:
117, 113=for,middleware_method,in,self._template_response_middleware,:
118, 114=response,=,middleware_method,(,request,,,response,)
124, 120=response,=,response.render,(,)
125, 121=except,http.Http404,as,e,:
126, 122=logger.warning,(,'Not Found: %s',,,request.path,,
127, 123=extra,=,{
129, 125='request',:,request
131, 127=if,settings.DEBUG,:
132, 128=response,=,debug.technical_404_response,(,request,,,e,)
135, 131=except,PermissionDenied,:
136, 132=logger.warning,(
137, 133='Forbidden (Permission denied): %s',,,request.path,,
139, 135='status_code',:,403,,
140, 136='request',:,request
143, 139=except,MultiPartParserError,:
144, 140=logger.warning,(
145, 141='Bad request (Unable to parse request body): %s',,,request.path,,
149, 145=},)
150, 146=response,=,self.get_exception_response,(,request,,,resolver,,,400,)
153, 149=e.__class__.__name__,)
154, 150=security_logger.error,(
155, 151=force_text,(,e,),,
156, 152=extra,=,{
159, 155=},)
160, 156=if,settings.DEBUG,:
161, 157=return,debug.technical_500_response,(,request,,,*,sys.exc_info,(,),,,status_code,=,400,)
164, 160=raise
168, 164=try,:
169, 165=for,middleware_method,in,self._response_middleware,:
170, 166=response,=,middleware_method,(,request,,,response,)
173, 169="%s.process_response didn't return an "
177, 173=except,:
179, 175=response,=,self.handle_uncaught_exception,(,request,,,resolver,,,sys.exc_info,(,),)
180, 176=response._closable_objects.append,(,request,)
181, 177=return,response
185,         generate HTTP 500 responses). Can be overridden by subclasses who want
186,         customised 500 handling.
187, 
188,         Be *very* careful when overriding this because the error could be
189,         caused by anything, so assuming something like the database is always
196, 184=extra,=,{
199, 187=}
----------------------
cluster 2 : 
----------------------
8, 8=from,django.core.exceptions,import,MiddlewareNotUsed,,,PermissionDenied,,,SuspiciousOperation
63, 59=if,(,db.settings_dict,[,'ATOMIC_REQUESTS',]
88, 84=urlconf,=,request.urlconf
91, 87=resolver_match,=,resolver.resolve,(,request.path_info,)
97, 93=break
130, 126=},)
138, 134=extra,=,{
146, 142=extra,=,{
158, 154='request',:,request
178, 174=signals.got_request_exception.send,(,sender,=,self.__class__,,,request,=,request,)
195, 183=exc_info,=,exc_info,,
----------------------
cluster 3 : 
----------------------
61, 57=non_atomic_requests,=,getattr,(,view,,,'_non_atomic_requests',,,set,(,),)
65, 61=view,=,transaction.atomic,(,using,=,db.alias,),(,view,)
66, 62=return,view
68, 64=try,:
100, 96=try,:
114, 110=raise,ValueError,(,"The view %s.%s didn't return an HttpResponse object. It returned None instead."
128, 124='status_code',:,404,,
162, 158=response,=,self.get_exception_response,(,request,,,resolver,,,400,)
166, 162=signals.got_request_exception.send,(,sender,=,self.__class__,,,request,=,request,)
172, 168=raise,ValueError,(
174, 170="HttpResponse object. It returned None instead."
198, 186='request',:,request
----------------------
cluster 4 : 
----------------------
15, 15=logger,=,logging.getLogger,(,'django.request',)
16, 16=class,BaseHandler,(,object,),:
21, 21=def,__init__,(,self,),:
27, 27=def,load_middleware,(,self,),:
35, 31=self._response_middleware,=,[,]
37, 33=request_middleware,=,[,]
40, 36=try,:
46, 42=else,:
48, 44=continue
58, 54=self._exception_middleware.insert,(,0,,,mw_instance.process_exception,)
74, 70=return,response
79, 75=resolver,=,urlresolvers.RegexURLResolver,(,r'^/',,,urlconf,)
85, 81=break
87, 83=if,hasattr,(,request,,,'urlconf',),:
95, 91=response,=,middleware_method,(,request,,,callback,,,callback_args,,,callback_kwargs,)
111, 107=view_name,=,callback.__name__
119, 115=if,response,is,None,:
120, 116=raise,ValueError,(
148, 144='request',:,request
171, 167=if,response,is,None,:
176, 172=response,=,self.apply_response_fixes,(,request,,,response,)
192, 180=if,settings.DEBUG_PROPAGATE_EXCEPTIONS,:
----------------------
cluster 5 : 
----------------------
57, 53=if,hasattr,(,mw_instance,,,'process_exception',),:
69, 65=callback,,,param_dict,=,resolver.resolve_error_handler,(,status_code,)
157, 153='status_code',:,400,,
163, 159=except,SystemExit,:
175, 171=%,(,middleware_method.__self__.__class__.__name__,),)
----------------------
cluster 6 : 
----------------------
41, 37=mw_instance,=,mw_class,(,)
43, 39=if,settings.DEBUG,:
45, 41=logger.debug,(,'MiddlewareNotUsed(%r): %s',,,middleware_path,,,exc,)
47, 43=logger.debug,(,'MiddlewareNotUsed: %r',,,middleware_path,)
49, 45=if,hasattr,(,mw_instance,,,'process_request',),:
50, 46=request_middleware.append,(,mw_instance.process_request,)
51, 47=if,hasattr,(,mw_instance,,,'process_view',),:
52, 48=self._view_middleware.append,(,mw_instance.process_view,)
53, 49=if,hasattr,(,mw_instance,,,'process_template_response',),:
54, 50=self._template_response_middleware.insert,(,0,,,mw_instance.process_template_response,)
56, 52=self._response_middleware.insert,(,0,,,mw_instance.process_response,)
71, 67=except,:
75, 71=def,get_response,(,self,,,request,),:
83, 79=response,=,middleware_method,(,request,)
86, 82=if,response,is,None,:
122, 118="HttpResponse object. It returned None instead."
133, 129=else,:
141, 137=},)
151, 147=except,SuspiciousOperation,as,e,:
182, 178=def,handle_uncaught_exception,(,self,,,request,,,resolver,,,exc_info,),:
190,         available would be an error.
193, 181=raise
194, 182=logger.error,(,'Internal Server Error: %s',,,request.path,,
----------------------
cluster 7 : 
----------------------
106, 102=break
112, 108=else,:
----------------------
cluster 8 : 
----------------------
0, 0=from,__future__,import,unicode_literals
4, 4=from,django,import,http
5, 5=from,django.conf,import,settings
6, 6=from,django.core,import,urlresolvers
7, 7=from,django.core,import,signals
9, 9=from,django.db,import,connections,,,transaction
10, 10=from,django.http.multipartparser,import,MultiPartParserError
11, 11=from,django.utils.encoding,import,force_text
12, 12=from,django.utils.module_loading,import,import_string
13, 13=from,django.utils,import,six
14, 14=from,django.views,import,debug
17, 17=response_fixes,=,[
22, 22=self._request_middleware,=,None
23, 23=self._view_middleware,=,None
24, 24=self._template_response_middleware,=,None
25, 25=self._response_middleware,=,None
26, 26=self._exception_middleware,=,None
29,         Populate middleware lists from settings.MIDDLEWARE_CLASSES.
30, 
31,         Must be called after the environment is fixed (see __call__ in subclasses).
32,         """
33, 29=self._view_middleware,=,[,]
34, 30=self._template_response_middleware,=,[,]
38, 34=for,middleware_path,in,settings.MIDDLEWARE_CLASSES,:
55, 51=if,hasattr,(,mw_instance,,,'process_response',),:
60, 56=def,make_view_atomic,(,self,,,view,),:
73, 69=response,=,self.handle_uncaught_exception,(,request,,,resolver,,,sys.exc_info,(,),)
77, 73=urlconf,=,settings.ROOT_URLCONF
78, 74=urlresolvers.set_urlconf,(,urlconf,)
82, 78=for,middleware_method,in,self._request_middleware,:
84, 80=if,response,:
89, 85=urlresolvers.set_urlconf,(,urlconf,)
90, 86=resolver,=,urlresolvers.RegexURLResolver,(,r'^/',,,urlconf,)
94, 90=for,middleware_method,in,self._view_middleware,:
98, 94=if,response,is,None,:
99, 95=wrapped_callback,=,self.make_view_atomic,(,callback,)
103, 99=for,middleware_method,in,self._exception_middleware,:
105, 101=if,response,:
107, 103=if,response,is,None,:
109, 105=if,response,is,None,:
113, 109=view_name,=,callback.__class__.__name__,+,'.__call__'
115, 111=%,(,callback.__module__,,,view_name,),)
121, 117="%s.process_template_response didn't return an "
123, 119=%,(,middleware_method.__self__.__class__.__name__,),)
134, 130=response,=,self.get_exception_response,(,request,,,resolver,,,404,)
142, 138=response,=,self.get_exception_response,(,request,,,resolver,,,403,)
147, 143='status_code',:,400,,
152, 148=security_logger,=,logging.getLogger,(,'django.security.%s',%
165, 161=except,:
167, 163=response,=,self.handle_uncaught_exception,(,request,,,resolver,,,sys.exc_info,(,),)
183, 179="""
184,         Processing for any otherwise uncaught exceptions (those that will
191,         """
197, 185='status_code',:,500,,
----------------------
