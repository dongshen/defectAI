There are 8 clusters!
cluster 1 : 
----------------------
1, import,logging
2, import,sys
3, import,types
18, http.fix_location_header,,
19, http.conditional_content_removal,,
20, ]
28, """        Populate middleware lists from settings.MIDDLEWARE_CLASSES.        Must be called after the environment is fixed (see __call__ in subclasses).        """
36, try,:
39, if,settings.DEBUG,:
42, else,:
44, continue
59, if,(,db.settings_dict,[,'ATOMIC_REQUESTS',]
62, return,view
64, try,:
67, except,:
70, return,response
72, "Returns an HttpResponse object for the given HttpRequest"
76, try,:
80, if,response,:
81, break
92, if,response,:
93, break
96, try,:
101, if,response,:
102, break
104, raise
108, else,:
110, raise,ValueError,(,"The view %s.%s didn't return an HttpResponse object. It returned None instead."
116, raise,ValueError,(
117, "%s.process_template_response didn't return an "
118, "HttpResponse object. It returned None instead."
124, 'status_code',:,404,,
125, 'request',:,request
126, },)
127, if,settings.DEBUG,:
129, else,:
131, except,PermissionDenied,:
132, logger.warning,(
135, 'status_code',:,403,,
136, 'request',:,request
137, },)
139, except,MultiPartParserError,:
140, logger.warning,(
143, 'status_code',:,400,,
144, 'request',:,request
145, },)
149, e.__class__.__name__,)
150, security_logger.error,(
153, 'status_code',:,400,,
154, 'request',:,request
155, },)
156, if,settings.DEBUG,:
159, except,SystemExit,:
160, raise
161, except,:
164, try,:
168, raise,ValueError,(
169, "%s.process_response didn't return an "
170, "HttpResponse object. It returned None instead."
173, except,:
177, return,response
179, """        Processing for any otherwise uncaught exceptions (those that will        generate HTTP 500 responses). Can be overridden by subclasses who want        customised 500 handling.        Be *very* careful when overriding this because the error could be        caused by anything, so assuming something like the database is always        available would be an error.        """
180, if,settings.DEBUG_PROPAGATE_EXCEPTIONS,:
181, raise
185, 'status_code',:,500,,
186, 'request',:,request
187, }
188, )
189, if,settings.DEBUG,:
196, """        Applies each of the functions in self.response_fixes to the request and        response, modifying the response in the process. Returns the new        response.        """
199, return,response
----------------------
cluster 2 : 
----------------------
8, from,django.core.exceptions,import,MiddlewareNotUsed,,,PermissionDenied,,,SuspiciousOperation
63, def,get_exception_response,(,self,,,request,,,resolver,,,status_code,),:
88, callback,,,callback_args,,,callback_kwargs,=,resolver_match
91, response,=,middleware_method,(,request,,,callback,,,callback_args,,,callback_kwargs,)
97, response,=,wrapped_callback,(,request,,,*,callback_args,,,**,callback_kwargs,)
130, response,=,self.get_exception_response,(,request,,,resolver,,,404,)
138, response,=,self.get_exception_response,(,request,,,resolver,,,403,)
146, response,=,self.get_exception_response,(,request,,,resolver,,,400,)
158, response,=,self.get_exception_response,(,request,,,resolver,,,400,)
178, def,handle_uncaught_exception,(,self,,,request,,,resolver,,,exc_info,),:
195, def,apply_response_fixes,(,self,,,request,,,response,),:
----------------------
cluster 3 : 
----------------------
61, view,=,transaction.atomic,(,using,=,db.alias,),(,view,)
65, callback,,,param_dict,=,resolver.resolve_error_handler,(,status_code,)
66, response,=,callback,(,request,,,**,param_dict,)
68, signals.got_request_exception.send,(,sender,=,self.__class__,,,request,=,request,)
100, response,=,middleware_method,(,request,,,e,)
114, response,=,middleware_method,(,request,,,response,)
128, response,=,debug.technical_404_response,(,request,,,e,)
162, signals.got_request_exception.send,(,sender,=,self.__class__,,,request,=,request,)
166, response,=,middleware_method,(,request,,,response,)
172, response,=,self.apply_response_fixes,(,request,,,response,)
174, signals.got_request_exception.send,(,sender,=,self.__class__,,,request,=,request,)
198, response,=,func,(,request,,,response,)
----------------------
cluster 4 : 
----------------------
15, logger,=,logging.getLogger,(,'django.request',)
16, class,BaseHandler,(,object,),:
21, def,__init__,(,self,),:
27, def,load_middleware,(,self,),:
35, mw_class,=,import_string,(,middleware_path,)
37, mw_instance,=,mw_class,(,)
40, if,six.text_type,(,exc,),:
46, request_middleware.append,(,mw_instance.process_request,)
48, self._view_middleware.append,(,mw_instance.process_view,)
58, for,db,in,connections.all,(,),:
74, urlresolvers.set_urlconf,(,urlconf,)
79, response,=,middleware_method,(,request,)
85, urlresolvers.set_urlconf,(,urlconf,)
87, resolver_match,=,resolver.resolve,(,request.path_info,)
95, wrapped_callback,=,self.make_view_atomic,(,callback,)
111, %,(,callback.__module__,,,view_name,),)
119, %,(,middleware_method.__self__.__class__.__name__,),)
120, response,=,response.render,(,)
148, security_logger,=,logging.getLogger,(,'django.security.%s',%
171, %,(,middleware_method.__self__.__class__.__name__,),)
176, response._closable_objects.append,(,request,)
192, six.reraise,(,*,exc_info,)
----------------------
cluster 5 : 
----------------------
57, non_atomic_requests,=,getattr,(,view,,,'_non_atomic_requests',,,set,(,),)
69, response,=,self.handle_uncaught_exception,(,request,,,resolver,,,sys.exc_info,(,),)
157, return,debug.technical_500_response,(,request,,,*,sys.exc_info,(,),,,status_code,=,400,)
163, response,=,self.handle_uncaught_exception,(,request,,,resolver,,,sys.exc_info,(,),)
175, response,=,self.handle_uncaught_exception,(,request,,,resolver,,,sys.exc_info,(,),)
----------------------
cluster 6 : 
----------------------
41, logger.debug,(,'MiddlewareNotUsed(%r): %s',,,middleware_path,,,exc,)
43, logger.debug,(,'MiddlewareNotUsed: %r',,,middleware_path,)
45, if,hasattr,(,mw_instance,,,'process_request',),:
47, if,hasattr,(,mw_instance,,,'process_view',),:
49, if,hasattr,(,mw_instance,,,'process_template_response',),:
50, self._template_response_middleware.insert,(,0,,,mw_instance.process_template_response,)
51, if,hasattr,(,mw_instance,,,'process_response',),:
52, self._response_middleware.insert,(,0,,,mw_instance.process_response,)
53, if,hasattr,(,mw_instance,,,'process_exception',),:
54, self._exception_middleware.insert,(,0,,,mw_instance.process_exception,)
56, def,make_view_atomic,(,self,,,view,),:
71, def,get_response,(,self,,,request,),:
75, resolver,=,urlresolvers.RegexURLResolver,(,r'^/',,,urlconf,)
83, if,hasattr,(,request,,,'urlconf',),:
86, resolver,=,urlresolvers.RegexURLResolver,(,r'^/',,,urlconf,)
122, logger.warning,(,'Not Found: %s',,,request.path,,
133, 'Forbidden (Permission denied): %s',,,request.path,,
141, 'Bad request (Unable to parse request body): %s',,,request.path,,
151, force_text,(,e,),,
182, logger.error,(,'Internal Server Error: %s',,,request.path,,
190, return,debug.technical_500_response,(,request,,,*,exc_info,)
193, callback,,,param_dict,=,resolver.resolve_error_handler,(,500,)
194, return,callback,(,request,,,**,param_dict,)
----------------------
cluster 7 : 
----------------------
106, if,isinstance,(,callback,,,types.FunctionType,),:
112, if,hasattr,(,response,,,'render',),and,callable,(,response.render,),:
----------------------
cluster 8 : 
----------------------
0, from,__future__,import,unicode_literals
4, from,django,import,http
5, from,django.conf,import,settings
6, from,django.core,import,urlresolvers
7, from,django.core,import,signals
9, from,django.db,import,connections,,,transaction
10, from,django.http.multipartparser,import,MultiPartParserError
11, from,django.utils.encoding,import,force_text
12, from,django.utils.module_loading,import,import_string
13, from,django.utils,import,six
14, from,django.views,import,debug
17, response_fixes,=,[
22, self._request_middleware,=,None
23, self._view_middleware,=,None
24, self._template_response_middleware,=,None
25, self._response_middleware,=,None
26, self._exception_middleware,=,None
29, self._view_middleware,=,[,]
30, self._template_response_middleware,=,[,]
31, self._response_middleware,=,[,]
32, self._exception_middleware,=,[,]
33, request_middleware,=,[,]
34, for,middleware_path,in,settings.MIDDLEWARE_CLASSES,:
38, except,MiddlewareNotUsed,as,exc,:
55, self._request_middleware,=,request_middleware
60, and,db.alias,not,in,non_atomic_requests,),:
73, urlconf,=,settings.ROOT_URLCONF
77, response,=,None
78, for,middleware_method,in,self._request_middleware,:
82, if,response,is,None,:
84, urlconf,=,request.urlconf
89, request.resolver_match,=,resolver_match
90, for,middleware_method,in,self._view_middleware,:
94, if,response,is,None,:
98, except,Exception,as,e,:
99, for,middleware_method,in,self._exception_middleware,:
103, if,response,is,None,:
105, if,response,is,None,:
107, view_name,=,callback.__name__
109, view_name,=,callback.__class__.__name__,+,'.__call__'
113, for,middleware_method,in,self._template_response_middleware,:
115, if,response,is,None,:
121, except,http.Http404,as,e,:
123, extra,=,{
134, extra,=,{
142, extra,=,{
147, except,SuspiciousOperation,as,e,:
152, extra,=,{
165, for,middleware_method,in,self._response_middleware,:
167, if,response,is,None,:
183, exc_info,=,exc_info,,
184, extra,=,{
191, if,resolver.urlconf_module,is,None,:
197, for,func,in,self.response_fixes,:
----------------------
